name: Deploy das alterações para QA
on:
  pull_request:
    types: [closed]
    branches:
      - qa
    paths:
      - 'force-app/**'

jobs:
  merge_deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Instalar dependências do sistema e do Salesforce CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl jq
          npm install @salesforce/cli --global

      - name: Autenticar com a org QA
        run: |
          echo "${{ secrets.AUTH_URL_QA }}" > sfdx-auth-url.txt
          sf org login sfdx-url -f sfdx-auth-url.txt --alias qa

      - name: Instalar plugin sfdx-git-delta
        run: echo "y" | sf plugins install sfdx-git-delta

      - name: Criar diretório de saída para o pacote delta
        run: mkdir -p deploy

      - name: Gerar pacote delta no diretório deploy
        run: |
          sf sgd source delta --from HEAD^ --to HEAD --output-dir deploy

      - name: Definir nome do artefato com org, data e hora
        id: set-artifact-name
        run: |
          ORG_NAME="QA"
          export TZ="America/Sao_Paulo"
          TIMESTAMP=$(date +'%d-%m-%Y--%H-%M-%S')
          echo "PACKAGE_XML_ARTIFACT=${ORG_NAME}_Package_xml_${TIMESTAMP}" >> $GITHUB_OUTPUT
          echo "DEPLOY_LOG_ARTIFACT=${ORG_NAME}_Deploy_log_${TIMESTAMP}" >> $GITHUB_OUTPUT

      - name: Listar conteúdo do diretório deploy
        run: ls -R deploy

      - name: Exibir conteúdo do package.xml
        run: cat deploy/package/package.xml

      - name: Implantar e rodar testes específicos
        run: |
          TEST_CLASSES=$(cat specified-tests.txt | tr '\n' ' ') 
           sf project deploy start --manifest deploy/package/package.xml --test-level RunSpecifiedTests --tests "$TEST_CLASSES" --target-org qa > deploy/deploy_output.log || true
          cat deploy/deploy_output.log


      - name: Salvar package.xml
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.PACKAGE_XML_ARTIFACT }}
          path: deploy/package/package.xml

      - name: Salvar o Log de Deploy
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.DEPLOY_LOG_ARTIFACT }}
          path: deploy/deploy_output.log
